//========================================================================================
//  
//  $File: //depot/devtech/15.0/plugin/source/sdksamples/CustomHttpLink/CustomHttpLink.fr $
//  
//  Owner: swagarg
//  
//  $Author: pmbuilder $
//  
//  $DateTime: 2019/10/11 10:48:01 $
//  
//  $Revision: #2 $
//  
//  $Change: 1061132 $
//  
//  ADOBE CONFIDENTIAL
//  
//  Copyright 2019 Adobe
//  All Rights Reserved.
//
//  NOTICE: Adobe permits you to use, modify, and distribute this file in
//  accordance with the terms of the Adobe license agreement accompanying
//  it. If you have received this file from a source other than Adobe,
//  then your use, modification, or distribution of it requires the prior
//  written permission of Adobe. 
//  
//========================================================================================

#include "VCPlugInHeaders.h"

// General includes:
#include "MenuDef.fh"
#include "ActionDef.fh"
#include "ActionDefs.h"
#include "AdobeMenuPositions.h"
#include "LocaleIndex.h"
#include "PMLocaleIds.h"
#include "StringTable.fh"
#include "ObjectModelTypes.fh"
#include "ShuksanID.h"
#include "LinksID.h"
#include "WorkspaceID.h"
#include "CustomHttpLinkID.h"
#include "WidgetID.h"
#include "BuildNumber.h"
#include "PlugInModel_UIAttributes.h"

// Project includes:

#ifdef __ODFRC__

/*
 * To set up the local server, read 'Readme.txt'
 * For giving a easy headstart to the sample, we have bundled a simple nodejs based server using royalty free images from https://www.pexels.com, and their license states - https://www.pexels.com/photo-license/.
 * DISCLAIMER: Adobe doesn't recommend using these images outside this sdk sample. Please refer to Adobe Image Use Rights - https://www.adobe.com/in/legal/permissions/image-notice.html.
 *
 * To modify the Default HTTP Links rendition type (kFPO or kOriginal),
 * use ILinkFacade::SetHTTPLinksDefaultRenditionType
 */

/*  
 * Plugin version definition.
 */
resource PluginVersion (kSDKDefPluginVersionResourceID)
{
	kTargetVersion,
	kCustomHttpLinkPluginID,
	kSDKDefPlugInMajorVersionNumber, kSDKDefPlugInMinorVersionNumber,
	kSDKDefHostMajorVersionNumber, kSDKDefHostMinorVersionNumber,
	kCustomHttpLinkCurrentMajorFormatNumber, kCustomHttpLinkCurrentMinorFormatNumber,
	{ kInDesignProduct, kInCopyProduct, kInDesignServerProduct },
	{ kWildFS },
	kModelPlugIn,
	kCustomHttpLinkVersion
};

/*  
 * The ExtraPluginInfo resource adds extra information to the Missing Plug-in dialog
 * that is popped when a document containing this plug-in's data is opened when
 * this plug-in is not present. These strings are not translatable strings
 * since they must be available when the plug-in isn't around. They get stored
 * in any document that this plug-in contributes data to.
 */
resource ExtraPluginInfo(1)
{
	kCustomHttpLinkCompanyValue,			// Company name
	kCustomHttpLinkMissingPluginURLValue,	// URL 
	kCustomHttpLinkMissingPluginAlertValue,	// Missing plug-in alert text
};

/* 
 * Boss class definitions.
 */
resource ClassDescriptionTable(kSDKDefClassDescriptionTableResourceID)
{{{
    
     Class
     {
          kCusHttpLnkLinkResourceProviderBoss,
          kInvalidClass,
          {
               IID_IK2SERVICEPROVIDER,                kHTTPLinkSubsystemObjectProviderImpl,
               IID_IHTTPLINKSUBSYSTEMOBJECTFACTORY,   kCusHttpLnkLinkResourceFactoryImpl,
          }
     },
     
     Class
     {
          kCusHttpLnkLinkResourceServerHelperBoss,
          kHTTPAssetLinkResourceServerHelperBoss,
          {
               IID_IHTTPLINKRESOURCESERVERAPIWRAPPER,    kCusHttpLnkResourceServerAPIWrapperImpl,
          }
     },
     
     Class
     {
          kCusHttpLnkLinkResourceHelperBoss,
          kHTTPAssetLinkResourceHelperBoss,
          {
               IID_IHTTPLINKRESOURCECONNECTION,           kCusHttpLnkLinkResourceConnectionImpl,
               IID_IHTTPLINKRESOURCESTATEBATCHUPDATER,    kCusHttpLnkLinkResourceStateBatchUpdaterImpl,
          }
     },
     
     Class
     {
          kCusHttpLnkLinkResourceHandlerBoss,
          kHTTPAssetLinkResourceHandlerBoss,
          {
               IID_ILINKRESOURCEHANDLER,                kCusHttpLnkLinkResourceHandlerImpl,
               IID_ILINKRESOURCEHELPERHANDLER,          kCusHttpLnkLinkResourceHelperHandlerImpl,
          }
     },


    Class
    {
        kCusHttpLnkLinkResourceStateUpdaterBoss,
        kInvalidClass,
        {
            IID_ILINKRESOURCESTATEUPDATER,            kCusHttpLnkLinkResourceStateUpdaterImpl,
        }
    },

}}};

/*  
 * Implementation definition.
 */
resource FactoryList (kSDKDefFactoryListResourceID)
{
	kImplementationIDSpace,
	{
		#include "CustomHttpLinkFactoryList.h"
	}
};


/*  
 * Locale Indicies.
 * The LocaleIndex should have indicies that point at your
 * localizations for each language system that you are localized for.
 */

/*  
 * String LocaleIndex.
 */
resource LocaleIndex ( kSDKDefStringsResourceID)
{
	kStringTableRsrcType,
	{
		kWildFS, k_enUS, kSDKDefStringsResourceID + index_enUS
		kWildFS, k_enGB, kSDKDefStringsResourceID + index_enUS
		kWildFS, k_deDE, kSDKDefStringsResourceID + index_enUS
		kWildFS, k_frFR, kSDKDefStringsResourceID + index_enUS
		kWildFS, k_esES, kSDKDefStringsResourceID + index_enUS
		kWildFS, k_ptBR, kSDKDefStringsResourceID + index_enUS
		kWildFS, k_svSE, kSDKDefStringsResourceID + index_enUS
		kWildFS, k_daDK, kSDKDefStringsResourceID + index_enUS
		kWildFS, k_nlNL, kSDKDefStringsResourceID + index_enUS
		kWildFS, k_itIT, kSDKDefStringsResourceID + index_enUS
		kWildFS, k_nbNO, kSDKDefStringsResourceID + index_enUS
		kWildFS, k_fiFI, kSDKDefStringsResourceID + index_enUS
		kInDesignJapaneseFS, k_jaJP, kSDKDefStringsResourceID + index_jaJP
	}
};

resource LocaleIndex (kSDKDefStringsNoTransResourceID)
{
	kStringTableRsrcType,
	{
		kWildFS, k_Wild, kSDKDefStringsNoTransResourceID + index_enUS
	}
};


// Strings not being localized
resource StringTable (kSDKDefStringsNoTransResourceID + index_enUS)
{
	k_enUS,									// Locale Id
	kEuropeanMacToWinEncodingConverter,		// Character encoding converter
	{
	}
};

#endif // __ODFRC__

#include "CustomHttpLink_enUS.fr"
#include "CustomHttpLink_jaJP.fr"
